#version 460

layout (local_size_x = 16, local_size_y = 16) in;

layout(set = 0, binding = 0) readonly uniform GPUSceneBuffer{ 
    mat4 clipFromWorld;
    vec4 lightDir;
} gpuSceneData;


layout(rgba16f,set = 1, binding = 0) uniform readonly image2D positionImage;
layout(rgba16f,set = 1, binding = 1) uniform readonly image2D normalImage;
layout(rgba16f,set = 1, binding = 2) uniform readonly image2D albedoImage;

layout(rgba16f,set = 2, binding = 0) uniform image2D outputImage;



void main() 
{
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(positionImage);

    vec4 position = imageLoad(positionImage, texelCoord);
    vec3 normal = normalize(imageLoad(normalImage, texelCoord).xyz);
    vec4 albedo = imageLoad(albedoImage, texelCoord);

    if(texelCoord.x < size.x && texelCoord.y < size.y)
    {

            float diff = max(dot(gpuSceneData.lightDir.xyz, normal.xyz), 0.0);
            vec3 diffuse = diff * albedo.rgb;
            imageStore(outputImage, texelCoord, vec4(diffuse, 1.0));
    }
    
}

