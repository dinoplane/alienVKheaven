#version 460

layout (local_size_x = 16, local_size_y = 16) in;

layout(rgba16f,set = 0, binding = 0) uniform readonly image2D positionImage;
layout(rgba16f,set = 0, binding = 1) uniform readonly image2D normalImage;
layout(rgba16f,set = 0, binding = 2) uniform readonly image2D albedoImage;

layout(rgba16f,set = 1, binding = 0) uniform image2D outputImage;


vec3 lightPos = vec3(-10.0, 10.0, 10.0); 


void main() 
{
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = imageSize(positionImage);

    vec4 position = imageLoad(positionImage, texelCoord);
    vec4 normal = imageLoad(normalImage, texelCoord);
    vec4 albedo = imageLoad(albedoImage, texelCoord);

    if(texelCoord.x < size.x && texelCoord.y < size.y)
    {
        vec3 lightDir = normalize(lightPos - position.xyz);
        float diff = max(dot(normal.xyz, lightDir), 0.0);
        vec3 diffuse = diff * albedo.rgb;
        imageStore(outputImage, texelCoord, vec4(diffuse, 1.0));
    }
}

